security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
      App\Entity\User:
        algorithm: bcrypt
      App\Entity\Client:
        algorithm: bcrypt
    role_hierarchy:
        ROLE_ADMIN:       ROLE_ADMIN
        ROLE_SUPER_ADMIN: ROLE_SUPER_ADMIN
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username_email
    firewalls:
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator


        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/public/(.+),  roles: IS_AUTHENTICATED_ANONYMOUSLY  }
        - { path: ^/login_check, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/(.+),  roles: IS_AUTHENTICATED_FULLY }
